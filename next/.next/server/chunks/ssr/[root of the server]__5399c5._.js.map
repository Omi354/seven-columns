{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///app/src/styles/createEmotionCache.ts"],"sourcesContent":["import createCache, { EmotionCache } from '@emotion/cache'\n\nexport default function createEmotionCache(): EmotionCache {\n  return createCache({ key: 'css' })\n}\n"],"names":[],"mappings":";;;AAAA;;;;;;AAEe,SAAS;IACtB,OAAO,CAAA,GAAA,oIAAA,CAAA,UAAW,AAAD,EAAE;QAAE,KAAK;IAAM;AAClC"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///app/src/styles/theme.ts"],"sourcesContent":["import { createTheme } from '@mui/material/styles'\n\n// Create a theme instance.\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#F36304',\n    },\n    secondary: {\n      main: '#FBAA31',\n    },\n    error: {\n      main: '#3FA7C9',\n    },\n  },\n})\n\nexport default theme\n"],"names":[],"mappings":";;;AAAA;;AAEA,2BAA2B;AAC3B,MAAM,QAAQ,CAAA,GAAA,6MAAA,CAAA,cAAW,AAAD,EAAE;IACxB,SAAS;QACP,SAAS;YACP,MAAM;QACR;QACA,WAAW;YACT,MAAM;QACR;QACA,OAAO;YACL,MAAM;QACR;IACF;AACF;uCAEe"}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///app/src/pages/_document.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nimport createEmotionServer from '@emotion/server/create-instance'\nimport { RenderPageResult } from 'next/dist/shared/lib/utils'\nimport Document, {\n  Html,\n  Head,\n  Main,\n  NextScript,\n  DocumentInitialProps,\n} from 'next/document'\nimport * as React from 'react'\n\nimport { JSX } from 'react'\nimport createEmotionCache from '@/styles/createEmotionCache'\nimport theme from '@/styles/theme'\n\nexport default class MyDocument extends Document {\n  render(): JSX.Element {\n    return (\n      <Html lang=\"ja\">\n        <Head>\n          {/* PWA primary color */}\n          <meta name=\"theme-color\" content={theme.palette.primary.main} />\n          <link\n            rel=\"stylesheet\"\n            href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n          />\n        </Head>\n        <body>\n          <Main />\n          <NextScript />\n        </body>\n      </Html>\n    )\n  }\n}\n\n// `getInitialProps` belongs to `_document` (instead of `_app`),\n// it's compatible with static-site generation (SSG).\nMyDocument.getInitialProps = async (ctx): Promise<DocumentInitialProps> => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n\n  const originalRenderPage = ctx.renderPage\n\n  // You can consider sharing the same emotion cache between all the SSR requests to speed up performance.\n  // However, be aware that it can have global side effects.\n  const cache = createEmotionCache()\n  const { extractCriticalToChunks } = createEmotionServer(cache)\n\n  ctx.renderPage = (): RenderPageResult | Promise<RenderPageResult> =>\n    originalRenderPage({\n      enhanceApp:\n        (App: any) =>\n        // eslint-disable-next-line react/display-name\n        (props): JSX.Element => <App emotionCache={cache} {...props} />,\n    })\n\n  const initialProps = await Document.getInitialProps(ctx)\n  // This is important. It prevents emotion to render invalid HTML.\n  // See https://github.com/mui-org/material-ui/issues/26561#issuecomment-855286153\n  const emotionStyles = extractCriticalToChunks(initialProps.html)\n  const emotionStyleTags = emotionStyles.styles.map((style) => (\n    <style\n      data-emotion={`${style.key} ${style.ids.join(' ')}`}\n      key={style.key}\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={{ __html: style.css }}\n    />\n  ))\n\n  return {\n    ...initialProps,\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [\n      ...React.Children.toArray(initialProps.styles),\n      ...emotionStyleTags,\n    ],\n  }\n}\n"],"names":[],"mappings":"AAAA,qDAAqD;;;;AACrD;AAEA;AAOA;AAGA;AACA;;;;;;;;;;;;;AAEe,MAAM,mBAAmB,yHAAA,CAAA,UAAQ;IAC9C,SAAsB;QACpB,qBACE,sMAAC,yHAAA,CAAA,OAAI;YAAC,MAAK;;8BACT,sMAAC,yHAAA,CAAA,OAAI;;sCAEH,sMAAC;4BAAK,MAAK;4BAAc,SAAS,+GAAA,CAAA,UAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI;;;;;;sCAC5D,sMAAC;4BACC,KAAI;4BACJ,MAAK;;;;;;;;;;;;8BAGT,sMAAC;;sCACC,sMAAC,yHAAA,CAAA,OAAI;;;;;sCACL,sMAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;IAInB;AACF;AAEA,gEAAgE;AAChE,qDAAqD;AACrD,WAAW,eAAe,GAAG,OAAO;IAClC,mBAAmB;IACnB,EAAE;IACF,iBAAiB;IACjB,yBAAyB;IACzB,0BAA0B;IAC1B,8BAA8B;IAC9B,gBAAgB;IAChB,iBAAiB;IACjB,qBAAqB;IACrB,EAAE;IACF,4BAA4B;IAC5B,8BAA8B;IAC9B,gBAAgB;IAChB,iBAAiB;IACjB,qBAAqB;IACrB,EAAE;IACF,gBAAgB;IAChB,yBAAyB;IACzB,0BAA0B;IAC1B,gBAAgB;IAChB,iBAAiB;IAEjB,MAAM,qBAAqB,IAAI,UAAU;IAEzC,wGAAwG;IACxG,0DAA0D;IAC1D,MAAM,QAAQ,CAAA,GAAA,4HAAA,CAAA,UAAkB,AAAD;IAC/B,MAAM,EAAE,uBAAuB,EAAE,GAAG,CAAA,GAAA,kLAAA,CAAA,UAAmB,AAAD,EAAE;IAExD,IAAI,UAAU,GAAG,IACf,mBAAmB;YACjB,YACE,CAAC,MACD,8CAA8C;gBAC9C,CAAC,sBAAuB,sMAAC;wBAAI,cAAc;wBAAQ,GAAG,KAAK;;;;;;QAC/D;IAEF,MAAM,eAAe,MAAM,yHAAA,CAAA,UAAQ,CAAC,eAAe,CAAC;IACpD,iEAAiE;IACjE,iFAAiF;IACjF,MAAM,gBAAgB,wBAAwB,aAAa,IAAI;IAC/D,MAAM,mBAAmB,cAAc,MAAM,CAAC,GAAG,CAAC,CAAC,sBACjD,sMAAC;YACC,gBAAc,GAAG,MAAM,GAAG,CAAC,CAAC,EAAE,MAAM,GAAG,CAAC,IAAI,CAAC,MAAM;YAEnD,2CAA2C;YAC3C,yBAAyB;gBAAE,QAAQ,MAAM,GAAG;YAAC;WAFxC,MAAM,GAAG;;;;;IAMlB,OAAO;QACL,GAAG,YAAY;QACf,uEAAuE;QACvE,QAAQ;eACH,oGAAM,QAAQ,CAAC,OAAO,CAAC,aAAa,MAAM;eAC1C;SACJ;IACH;AACF"}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file:///app/src/pages/_app.tsx"],"sourcesContent":["import { CacheProvider, EmotionCache } from '@emotion/react'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { AppProps } from 'next/app'\nimport * as React from 'react'\n\nimport { JSX } from 'react'\nimport createEmotionCache from '@/styles/createEmotionCache'\nimport theme from '@/styles/theme'\n\n// Client-side cache, shared for the whole session of the user in the browser.\nconst clientSideEmotionCache = createEmotionCache()\n\ninterface MyAppProps extends AppProps {\n  emotionCache?: EmotionCache\n}\n\nexport default function MyApp(props: MyAppProps): JSX.Element {\n  const { Component, emotionCache = clientSideEmotionCache, pageProps } = props\n  return (\n    <CacheProvider value={emotionCache}>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...pageProps} />\n      </ThemeProvider>\n    </CacheProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AAOA;AACA;AANA;AADA;;;;;;;;;;;;;AASA,8EAA8E;AAC9E,MAAM,yBAAyB,CAAA,GAAA,4HAAA,CAAA,UAAkB,AAAD;AAMjC,SAAS,MAAM,KAAiB;IAC7C,MAAM,EAAE,SAAS,EAAE,eAAe,sBAAsB,EAAE,SAAS,EAAE,GAAG;IACxE,qBACE,sMAAC,oIAAA,CAAA,gBAAa;QAAC,OAAO;kBACpB,cAAA,sMAAC,iMAAA,CAAA,gBAAa;YAAC,OAAO,+GAAA,CAAA,UAAK;;8BAEzB,sMAAC,wJAAA,CAAA,UAAW;;;;;8BACZ,sMAAC;oBAAW,GAAG,SAAS;;;;;;;;;;;;;;;;;AAIhC"}},
    {"offset": {"line": 335, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}
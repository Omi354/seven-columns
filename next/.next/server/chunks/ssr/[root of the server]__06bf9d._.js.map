{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["file:///app/src/styles/createEmotionCache.ts"],"sourcesContent":["import createCache, { EmotionCache } from '@emotion/cache'\n\nexport default function createEmotionCache(): EmotionCache {\n  return createCache({ key: 'css' })\n}\n"],"names":[],"mappings":";;;AAAA;;;;;;AAEe,SAAS;IACtB,OAAO,CAAA,GAAA,oIAAA,CAAA,UAAW,AAAD,EAAE;QAAE,KAAK;IAAM;AAClC"}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 66, "column": 0}, "map": {"version":3,"sources":["file:///app/src/styles/theme.ts"],"sourcesContent":["import { createTheme } from '@mui/material/styles'\n\n// Create a theme instance.\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#F36304',\n    },\n    secondary: {\n      main: '#FBAA31',\n    },\n    error: {\n      main: '#3FA7C9',\n    },\n  },\n})\n\nexport default theme\n"],"names":[],"mappings":";;;AAAA;;AAEA,2BAA2B;AAC3B,MAAM,QAAQ,CAAA,GAAA,6MAAA,CAAA,cAAW,AAAD,EAAE;IACxB,SAAS;QACP,SAAS;YACP,MAAM;QACR;QACA,WAAW;YACT,MAAM;QACR;QACA,OAAO;YACL,MAAM;QACR;IACF;AACF;uCAEe"}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///app/src/pages/_app.tsx"],"sourcesContent":["import { CacheProvider, EmotionCache } from '@emotion/react'\nimport CssBaseline from '@mui/material/CssBaseline'\nimport { ThemeProvider } from '@mui/material/styles'\nimport { AppProps } from 'next/app'\nimport * as React from 'react'\n\nimport { JSX } from 'react'\nimport createEmotionCache from '@/styles/createEmotionCache'\nimport theme from '@/styles/theme'\n\n// Client-side cache, shared for the whole session of the user in the browser.\nconst clientSideEmotionCache = createEmotionCache()\n\ninterface MyAppProps extends AppProps {\n  emotionCache?: EmotionCache\n}\n\nexport default function MyApp(props: MyAppProps): JSX.Element {\n  const { Component, emotionCache = clientSideEmotionCache, pageProps } = props\n  return (\n    <CacheProvider value={emotionCache}>\n      <ThemeProvider theme={theme}>\n        {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n        <CssBaseline />\n        <Component {...pageProps} />\n      </ThemeProvider>\n    </CacheProvider>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AAOA;AACA;AANA;AADA;;;;;;;;;;;;;AASA,8EAA8E;AAC9E,MAAM,yBAAyB,CAAA,GAAA,4HAAA,CAAA,UAAkB,AAAD;AAMjC,SAAS,MAAM,KAAiB;IAC7C,MAAM,EAAE,SAAS,EAAE,eAAe,sBAAsB,EAAE,SAAS,EAAE,GAAG;IACxE,qBACE,sMAAC,oIAAA,CAAA,gBAAa;QAAC,OAAO;kBACpB,cAAA,sMAAC,iMAAA,CAAA,gBAAa;YAAC,OAAO,+GAAA,CAAA,UAAK;;8BAEzB,sMAAC,wJAAA,CAAA,UAAW;;;;;8BACZ,sMAAC;oBAAW,GAAG,SAAS;;;;;;;;;;;;;;;;;AAIhC"}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}